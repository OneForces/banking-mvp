package com.mvp.kyc;

import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;

/**
 * –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è KYC: —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ + –∑–¥—Ä–∞–≤—ã–π —Å–º—ã—Å–ª.
 * –ü–æ–∑–∂–µ —Å—é–¥–∞ –º–æ–∂–Ω–æ ¬´–ø–æ–¥–º–µ–Ω–∏—Ç—å¬ª –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π AI –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä.
 */
@Service
public class KycRules implements KycService {

  // –ü—Ä–∏–º–µ—Ä–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã ‚Äî –ø–æ–¥–ø—Ä–∞–≤—å –ø–æ–¥ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É
  private static final Pattern PASSPORT_RU = Pattern.compile("^[0-9]{2}\\s?[0-9]{2}\\s?[0-9]{6}$"); // 12 34 567890
  private static final Pattern PASSPORT_GENERIC = Pattern.compile("^[A-Z0-9\\-]{5,20}$");

  // 50 –ö–ë –∫–∞–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ ‚Äî –∑–∞—â–∏—Ç–∏—Ç—å—Å—è –æ—Ç ¬´–ø—É—Å—Ç—ã—Ö¬ª —Ñ–∞–π–ª–æ–≤
  private static final int MIN_IMAGE_SIZE = 50 * 1024;

  @Override
  public KycResult checkApplicant(String fullName,
                                  String passportNumber,
                                  byte[] idFront,
                                  byte[] idBack,
                                  byte[] selfie) {

    List<String> issues = new ArrayList<>();

    // –§–ò–û
    if (fullName == null || fullName.trim().split("\\s+").length < 2) {
      issues.add("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û");
    }

    // –ü–∞—Å–ø–æ—Ä—Ç
    if (passportNumber == null || passportNumber.isBlank()) {
      issues.add("–ù–µ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞");
    } else if (!(PASSPORT_RU.matcher(passportNumber.replaceAll("\\s+","")).matches()
          || PASSPORT_GENERIC.matcher(passportNumber).matches())) {
      issues.add("–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É");
    }

    // –î–æ–∫—É–º–µ–Ω—Ç—ã-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if (!hasMinBytes(idFront)) issues.add("–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ/—Ä–∞–∑–º–µ—Ä —Ñ—Ä–æ–Ω—Ç-—Å–∫–∞–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞");
    // –æ–±–æ—Ä–æ—Ç–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏–º
    if (idBack != null && idBack.length > 0 && !hasMinBytes(idBack)) {
      issues.add("–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ/—Ä–∞–∑–º–µ—Ä –æ–±–æ—Ä–æ—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞");
    }
    // —Å–µ–ª—Ñ–∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å ‚Äî –ø—Ä–æ–≤–µ—Ä–∏–º
    if (selfie != null && selfie.length > 0 && !hasMinBytes(selfie)) {
      issues.add("–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ/—Ä–∞–∑–º–µ—Ä —Å–µ–ª—Ñ–∏");
    }

    // üîí —Ç—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:
    // - –ø—Ä–æ–≤–µ—Ä–∫—É MRZ/—à—Ç—Ä–∏—Ö–∫–æ–¥–æ–≤
    // - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–µ–ª—Ñ–∏ —Å —Ñ–æ—Ç–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ (FaceMatch)
    // - –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Å–∞–Ω–∫—Ü–∏–æ–Ω–Ω—ã–º/PEP —Å–ø–∏—Å–∫–∞–º
    // - –ø—Ä–æ–≤–µ—Ä–∫—É –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
